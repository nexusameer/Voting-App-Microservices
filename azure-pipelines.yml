trigger:
  branches:
    include:
      - main

variables:
  resourceGroupName: 'My_PortFolio'
  aksClusterName: 'KubeCluster'
  containerRegistry: 'azure-resource.azurecr.io'
  voteImage: '$(containerRegistry)/vote:latest'
  resultImage: '$(containerRegistry)/result:latest'

jobs:
- job: BuildDockerImages
  displayName: 'Build and Push Docker Images'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: Docker@2
    displayName: 'Login to Azure Container Registry'
    inputs:
      containerRegistry: 'azure-acr-service-connection'
      command: 'login'

  - task: Docker@2
    displayName: 'Build and Push Vote App Image'
    inputs:
      repository: 'vote'
      dockerfile: 'vote/Dockerfile'  # Corrected path for Dockerfile
      command: 'buildAndPush'
      tags: 'latest'

  - task: Docker@2
    displayName: 'Build and Push Result App Image'
    inputs:
      repository: 'result'
      dockerfile: 'result/Dockerfile'  # Corrected path for Dockerfile
      command: 'buildAndPush'
      tags: 'latest'

- job: DeployKubernetes
  displayName: 'Deploy to AKS'
  dependsOn: BuildDockerImages
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: AzureCLI@2
    displayName: 'Set Azure Subscription'
    inputs:
      azureSubscription: 'azure-resource-service-connection'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName)

  - task: KubernetesManifest@0
    displayName: 'Create Kubernetes Deployments'
    inputs:
      action: 'deploy'
      kubernetesServiceConnection: 'aks-service-connection'
      namespace: 'default'
      manifests: |
        k8s-specifications/vote-deployment.yaml
        k8s-specifications/result-deployment.yaml
      containers: |
        $(voteImage)
        $(resultImage)

  - script: kubectl get all
    displayName: 'Verify Kubernetes Resources'
