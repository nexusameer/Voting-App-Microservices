trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'dockerhub-service-connection'
  imageRepository: 'nexusameer/votingappmicroservices'
  containerRegistry: 'docker.io'
  dockerfilePath: '**/Dockerfile'
  tag: 'latest'
  imagePullSecret: 'dockerhub-auth'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to Docker Hub
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'nexusameerVotingAppMicroservices.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: AzureCLI@2
            displayName: Authenticate to AKS
            inputs:
              azureSubscription: 'azure-resource'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az aks get-credentials --resource-group MyPortFolio --name KubeCluster --overwrite-existing
                kubectl create role azure-devops-deployer-role --namespace default --verb=get,list,create,update,patch,delete --resource=pods,deployments,services
                kubectl create rolebinding azure-devops-deployer-binding --namespace default --role=azure-devops-deployer-role --serviceaccount=default:default

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
